LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_SIGNED.ALL;

ENTITY Foward IS
    PORT (A :  IN  STD_LOGIC_VECTOR (2 DOWNTO 0);
          B :  IN  STD_LOGIC_VECTOR (3 DOWNTO 0);
          WDATA	 : IN STD_LOGIC;
          ADDR7_5: IN  STD_LOGIC_VECTOR (2 DOWNTO 0);
          ADDR10_8: IN  STD_LOGIC_VECTOR (2 DOWNTO 0);
          RF1   : IN STD_LOGIC;
          RF2   : IN STD_LOGIC;
			 		RAddr1 : IN STD_LOGIC_VECTOR(2 downto 0);
					RAddr2 : IN STD_LOGIC_VECTOR(2 downto 0);
          RA    : OUT STD_LOGIC_VECTOR(1 downto 0);
          RB    : OUT STD_LOGIC_VECTOR(1 downto 0));
          RMWD	: OUT STD_LOGIC_VECTOR(1 downto 0);
END Foward;

ARCHITECTURE behavior OF Foward IS

BEGIN
PROCESS (A, B, ADDR7_5, ADDR10_8, RF1, RF2)
BEGIN
    case RF1 is
        when '0' => case RF2 is
                        when '0' => RA<="00";
                                    RB<="00";
                        when '1' => if ((RAddr2 = ADDR10_8 and A="101") or (RAddr2 = ADDR7_5 and A="110")) then
                        								RA <= "10";
               											else 
               													RA <= "00";
               											end if;
               											
               											if (RAddr2 = ADDR7_5 and B = "0010") then
               													RB <= "10";
               											else
               													RB <= "00";
               											end if;
           													
           													if ((RAddr2 = ADDR10_8 and WDATA='0') or (RAddr2 = ADDR7_5 and WDATA='1')) then
           																RMWD <= "10";
           													else
           																RMWD <= "00";
           													end if;
               											
												when others => RA<="00";
																			 RB<="00";
                    end case;
        when '1' => case RF2 is
                        when '0'=>  if ((RAddr1 = ADDR10_8 and A="101") or (RAddr1 = ADDR7_5 and A="110")) then
                        								RA <= "01";
               											else 
               													RA <= "00";
               											end if;
               											
               											if (RAddr1 = ADDR7_5 and B = "0010") then
               													RB <= "01";
               											else
               													RB <= "00";
               											end if;
               											
               											if ((RAddr1 = ADDR10_8 and WDATA='0') or (RAddr1 = ADDR7_5 and WDATA='1')) then
           																RMWD <= "01";
           													else
           																RMWD <= "00";
           													end if;
               											
                        when '1'=>  if ((RAddr1 = ADDR10_8 and A="101") or (RAddr1 = ADDR7_5 and A="110")) then
                        								RA<="01";
                        						elsif ((RAddr2 = ADDR10_8 and A="101") or (RAddr2 = ADDR7_5 and A="110")) then
                        								RA<="10";
                        						else
                        								RA<="00";
                        						end if;
                        						
                        						if (RAddr1 = ADDR7_5 and B = "0010") then
                        								RB<="01";
                        						elsif (RAddr2 = ADDR7_5 and B = "0010") then
                        								RB<="10";
                        						else
                        								RB<="00";
                        						end if;
                        						
                        						if ((RAddr1 = ADDR10_8 and WDATA='0') or (RAddr1 = ADDR7_5 and WDATA='1')) then
                        								RMWD <="01";
                        						elsif ((RAddr2 = ADDR10_8 and WDATA='0') or (RAddr2 = ADDR7_5 and WDATA='1')) then
                        								RMWD <="10";
                        						else
                        								RMWD <="00";
                        						end if;
                        						
                        
												when others => RA<="00";
																			 RB<="00";
                    end case;
				  when others => RA<="00";
                         RB<="00";
			END CASE;
END PROCESS;
END behavior;
